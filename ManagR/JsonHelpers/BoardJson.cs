// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using managR.JsonHelpers;
//
//    var boardJson = BoardJson.FromJson(jsonString);

namespace managR.JsonHelpers
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class BoardJson
    {
        [JsonProperty("stories")]
        public Story[] Stories { get; set; }
    }

    public partial class Story
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("categories")]
        public Categories Categories { get; set; }
    }

    public partial class Categories
    {
        [JsonProperty("todo")]
        public Done Todo { get; set; }

        [JsonProperty("progress")]
        public Done Progress { get; set; }

        [JsonProperty("done")]
        public Done Done { get; set; }
    }

    public partial class Done
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("tasks")]
        public Task[] Tasks { get; set; }
    }

    public partial class Task
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }
    }

    public partial class BoardJson
    {
        public static BoardJson FromJson(string json) => JsonConvert.DeserializeObject<BoardJson>(json, managR.JsonHelpers.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this BoardJson self) => JsonConvert.SerializeObject(self, managR.JsonHelpers.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
